#include <stdio.h>
#include <stdlib.h>

typedef struct nodo {
    char caractere;
    struct nodo *proximo;
} Nodo;

void Empilha(Nodo **topoPilha, char caractere) {
    Nodo *novoNodo = malloc(sizeof(Nodo));
    if (novoNodo == NULL) {
        printf("Erro: falha na alocação de memória.\n");
        exit(EXIT_FAILURE);
    }
    novoNodo->caractere = caractere;
    novoNodo->proximo = *topoPilha;
    *topoPilha = novoNodo;
}

char Desempilha(Nodo **topoPilha) {
    if (*topoPilha == NULL) {
        printf("Erro: pilha vazia.\n");
        exit(EXIT_FAILURE);
    }
    Nodo *nodoRemovido = *topoPilha;
    char caractere = nodoRemovido->caractere;
    *topoPilha = nodoRemovido->proximo;
    free(nodoRemovido);
    return caractere;
}

int VerificaBalanceamento(char expressao[]) {
    Nodo *pilha = NULL;
    int i = 0;

    while (expressao[i] != '\0') {
        if (expressao[i] == '(' || expressao[i] == '[' || expressao[i] == '{') {
            Empilha(&pilha, expressao[i]);
        } else if (expressao[i] == ')' || expressao[i] == ']' || expressao[i] == '}') {
            if (pilha == NULL || 
                (expressao[i] == ')' && Desempilha(&pilha) != '(') ||
                (expressao[i] == ']' && Desempilha(&pilha) != '[') ||
                (expressao[i] == '}' && Desempilha(&pilha) != '{')) {
                return 0;
            }
        }
        i++;
    }

    if (pilha != NULL) {
        return 0;
    }

    return 1;
}

int main() {
    char expressao[1001];

    while (scanf("%[^\n]%*c", expressao) != EOF) {
        if (VerificaBalanceamento(expressao)) {
            printf("correct\n");
        } else {
            printf("incorrect\n");
        }
    }

    return 0;
}
